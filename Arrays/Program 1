PROBLEM STATEMENT

Given an unsorted array A of size N that contains only non-negative integers, 
find a continuous sub-array that adds to a given number S and return the left and 
right indexes of that sub-array. In the case of multiple subarrays, return the subarray indexes that come first when moving from left to right.

Note: Both the indexes in the array should be according to 1-based indexing.
You have to return an array list consisting of two elements, left and right. 
If no such subarray exists, return an array consisting of element -1.

Example 1
Input:

N = 5, S = 12

A[] = {1,2,3,7,5}

Output:

2 4

Explanation:

The sum of elements from the 2nd position to the 4th position is 12.



Example 2



Input:

N = 10, S = 15

A[] = {1,2,3,4,5,6,7,8,9,10}

Output:

1 5

Explanation:

The sum of elements from the 1st position to the 5th position is 15.

Input format :
The first line of the input is the length of the array, N.

The second line of the input is the sum of the sub-arrays to be searched, S.

The third line of the input is the space-separated array elements.

Output format :
The output prints two space-separated integers, representing the start and end index positions of the subarray respectively whose sum is S.

If no such subarray exists, return an array consisting of element -1.

Code constraints :
1 <= N <= 105

1 <= Ai <= 109

Sample test cases :
Input 1 :                  
5
12
1 2 3 7 5
Output 1 :
2 4 
Input 2 :
10
15
1 2 3 4 5 6 7 8 9 10
Output 2 :
1 5 
Input 3 :
3
22
1 4 5
Output 3 :
-1 


CODE:
import java.io.*;
import java.util.*;

class Solution
{
    //Function to find a continuous sub-array which adds up to a given number.
    static ArrayList<Integer> subarraySum(int[] arr, int n, int s) 
    {
        // Your code here
        ArrayList <Integer> al=new ArrayList<>();
        Integer i=0,st=0,sum=0;
        
        while(i<n){
            sum+=arr[i];
            
            if(sum==s){
                al.add(st+1);
                al.add(i+1);
                
                return al;
            }
            while(sum>s){
                
                sum-=arr[st];
                st=st+1;
            }
            if(sum==s){
                if(st<=i){
                al.add(st+1);
                al.add(i+1);
                return al;}
            }
            i++;
            
        }
        al.add(-1);
        return al;
    }
}
class Main
{
    public static void main(String args[])
    {
         Scanner sc=new Scanner(System.in);
         int l=sc.nextInt();
         int arrl[]=new int[l];
         int sum=sc.nextInt();
         for(int i=0;i<l;i++)
         {
             arrl[i]=sc.nextInt();
         }
         Solution s=new Solution();
         ArrayList <Integer> al=s.subarraySum(arrl,l,sum);
         for(int i=0;i<al.size();i++)
        {
            System.out.print(al.get(i)+" ");
        }
    }
}

